CE1

import React, { useState } from 'react';
import { TextField, Autocomplete, Button, Box, Typography } from '@mui/material';

const FruitSurvey = () => {
  const [name, setName] = useState('');
  const [fruit, setFruit] = useState('');
  const [submitted, setSubmitted] = useState(false);

  const fruits = ['Apple', 'Banana', 'Cherry', 'Durian', 'Elderberry'];

  const handleSubmit = (event) => {
    event.preventDefault();
    setSubmitted(true);
  };

  return (
    <div>
    <Box component="form" onSubmit={handleSubmit} sx={{ maxWidth: 400, mx: 'auto', mt: 4 }}>
        <h2 >Enter your name favourite fruit :</h2>
      <TextField
        label="Name"
        data-testid="name"
        value={name}
        onChange={(e) => setName(e.target.value)}
        fullWidth
        margin="normal"
      />
      <Autocomplete
        options={fruits}
        data-testid="autocomplete"
        renderInput={(params) => <TextField {...params} label="Choose a fruit" />}
        value={fruit}
        onChange={(event, newValue) => setFruit(newValue)}
        fullWidth
        margin="normal"
      />
      <Button 
        variant="contained" 
        type="submit" 
        data-testid="button"
         sx={{ mt: 2 }}
      >
        Submit
      </Button>
      {submitted && (
        <Typography variant="h6" sx={{ mt: 3 }}>
          Hello, {name}! Your favorite fruit is {fruit}.
        </Typography>
      )}
    </Box>
    </div>
  );
};

export default FruitSurvey;



CY1



import React from 'react';
import List from '@mui/material/List';
import ListItem from '@mui/material/ListItem';
import ListItemText from '@mui/material/ListItemText';
import Divider from '@mui/material/Divider';

const books = [
  {
    title: 'The Holy Bible',
    summary: 'Religious text of Christianity, considered sacred and canonical.'
  },
  {
    title: 'Quotations from Chairman Mao',
    summary: 'Collection of statements from speeches and writings by Mao Zedong.'
  },
  {
    title: 'Harry Potter series',
    summary: 'Fantasy novels by J.K. Rowling, following the life of a young wizard.'
  },
  {
    title: 'The Lord of the Rings',
    summary: 'High-fantasy novel written by J.R.R. Tolkien, set in Middle-earth.'
  },
  {
    title: 'To Kill a Mockingbird',
    summary: 'Novel by Harper Lee, dealing with racial injustice and moral growth.'
  }
];

const BookList = () => {
  return (
   <div> <h1>Most Influential Books of All Time</h1>
    <List>
      {books.map((book, index) => (
        <React.Fragment key={index}>
          <ListItem>
            <ListItemText 
              primary={book.title} 
              secondary={book.summary} 
            />
          </ListItem>
          {index < books.length - 1 && <Divider />}
        </React.Fragment>
      ))}
    </List>
    </div>
  );
};

export default BookList;


PAH1

import React, { useState } from 'react';
import Button from '@mui/material/Button';
import Dialog from '@mui/material/Dialog';
import DialogTitle from '@mui/material/DialogTitle';
import DialogContent from '@mui/material/DialogContent';
import DialogActions from '@mui/material/DialogActions';
import TextField from '@mui/material/TextField';

const LoginDialog = () => {
  const [open, setOpen] = useState(false);
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleClickOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  const handleLogin = () => {
    // Add your login logic here
    if (username && password) {
      // Assuming login is successful
      alert('Logged in successfully');
      handleClose();
    } else {
      alert('Please enter a valid username and password');
    }
  };

  return (
    <div>
      <Button 
        variant="contained" 
        color="primary" 
        onClick={handleClickOpen} 
        data-testid="login"
      >
        Login
      </Button>
      <Dialog open={open} onClose={handleClose}>
        <DialogTitle>Login</DialogTitle>
        <DialogContent>
          <TextField
            autoFocus
            margin="dense"
            id="username"
            label="Username"
            type="text"
            fullWidth
            variant="outlined"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            data-testid="username"
          />
          <TextField
            margin="dense"
            id="password"
            label="Password"
            type="password"
            fullWidth
            variant="outlined"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            data-testid="password"
          />
        </DialogContent>
        <DialogActions>
          <Button 
            onClick={handleClose} 
            color="primary" 
            data-testid="cancel"
          >
            Cancel
          </Button>
          <Button 
            onClick={handleLogin} 
            color="primary" 
            data-testid="dia-login"
          >
            Login
          </Button>
        </DialogActions>
      </Dialog>
    </div>
  );
};

export default LoginDialog;
